// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int       @id @default(autoincrement())
  createdAt  DateTime  @default(now())
  updateAt   DateTime  @updatedAt
  username   String    @unique
  email      String    @unique
  password   String
  firstName  String?
  lastName   String?
  avatar     String?
  ownCompany Company[] @relation(name: "OwnedBy")
  isManage   Company[]
}

model Company {
  id                Int            @id @default(autoincrement())
  createdAt         DateTime       @default(now())
  updateAt          DateTime       @updatedAt
  companyLogo       String?
  companyName       String         @unique
  companyOwner      User           @relation(name: "OwnedBy", fields: [userId], references: [id])
  companyAdress     CompanyAdress? @relation(fields: [companyAdressId], references: [id])
  companyManager    User[]
  connectedCompany  Company[]      @relation("connectComapny")
  connectingCompany Company[]      @relation("connectComapny")
  companyProduct    Product[]
  userId            Int
  companyAdressId   Int
}

model CompanyAdress {
  id           Int       @id @default(autoincrement())
  createdAt    DateTime  @default(now())
  updateAt     DateTime  @updatedAt
  country      String?
  city         String?
  streetAdress String?
  restAdress   String?
  adressNum    String?
  Company      Company[]
}

enum ItemOrderNumber {
  WAIT
  ORDER
  PRODUCE
  SEND
  COMPLETE
}

model Product {
  id             Int             @id @default(autoincrement())
  createdAt      DateTime        @default(now())
  updateAt       DateTime        @updatedAt
  company        Company         @relation(fields: [companyId], references: [id])
  itemPhoto      String?
  itemName       String          @unique
  itemType       String?
  itemCount      Int?
  itemPrice      Int?
  itemDesc       String?
  deprecatedItem Boolean?        @default(false)
  itemOrder      ItemOrderNumber @default(WAIT)
  itemOrderDesc  String?
  companyId      Int
}
