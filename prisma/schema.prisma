generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int       @id @default(autoincrement())
  createdAt  DateTime  @default(now())
  updateAt   DateTime  @updatedAt
  username   String    @unique
  email      String    @unique
  password   String
  firstName  String?
  lastName   String?
  avatar     String?
  ownCompany Company[] @relation(name: "OwnedBy")
  isManage   Company[]
}

model Company {
  id                Int            @id @default(autoincrement())
  createdAt         DateTime       @default(now())
  updateAt          DateTime       @updatedAt
  companyLogo       String?
  companyName       String         @unique
  companyOwner      User           @relation(name: "OwnedBy", fields: [userId], references: [id])
  companyAdress     CompanyAdress? @relation(fields: [companyAdressId], references: [id])
  companyManager    User[]
  connectedCompany  Company[]      @relation("connectComapny") // 거래처
  connectingCompany Company[]      @relation("connectComapny") // 거래처
  companyProduct    Product[] // 회사 상품
  inNout            InNout?        @relation(fields: [inNoutId], references: [id]) // 회계
  userId            Int
  companyAdressId   Int
  inNoutId          Int
}

model CompanyAdress {
  id           Int       @id @default(autoincrement())
  createdAt    DateTime  @default(now())
  updateAt     DateTime  @updatedAt
  country      String?
  city         String?
  streetAdress String?
  restAdress   String?
  adressNum    String?
  Company      Company[]
}

// income model expend model 만들기
model Product {
  id            Int            @id @default(autoincrement())
  createdAt     DateTime       @default(now())
  updateAt      DateTime       @updatedAt
  company       Company        @relation(fields: [companyId], references: [id])
  itemProductId String         @unique
  itemName      String // 제품이름
  itemModelName String? // 제품 모델명
  itemPhoto     String?
  itemType      String? // 제품 타입
  itemCount     Int?
  itemPrice     Int?
  itemDesc      String?
  incomeExpend  IncomeExpend[]

  companyId Int
}

model InNout {
  id           Int            @id @default(autoincrement())
  createdAt    DateTime       @default(now())
  updateAt     DateTime       @updatedAt
  capitalStock Int            @default(0) // 자본금
  budget       Int            @default(0) // 예산
  accountNum   String?        @unique // 거래계좌
  accountName  String // 계좌별명
  inNoutDesc   IncomeExpend[]
  Company      Company[]
}

model IncomeExpend {
  id           Int      @id @default(autoincrement())
  createdAt    DateTime @default(now())
  updateAt     DateTime @updatedAt
  productItem  Product? @relation(fields: [productId], references: [id])
  incomeTrue   Boolean? @default(false) //수입지출타입
  infoSubtitle String   @unique
  money        Int? // 수익금
  businessDate String? // 거래일
  paymentType  String? // 결제타입
  accountCode  String? // 계정과목
  businessDesc String? // 거래내용
  paymentsDone Boolean  @default(false) // 결제완료
  InNout       InNout?  @relation(fields: [inNoutId], references: [id])
  inNoutId     Int?
  productId    Int
}
